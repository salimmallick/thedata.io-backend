openapi: 3.0.3
info:
  title: theData.io API
  description: |
    theData.io API provides endpoints for event ingestion, analytics, and data management.
    
    ## Authentication
    All API endpoints require authentication using an API key that should be included
    in the `X-API-Key` header of each request.
    
    ## Rate Limiting
    API endpoints are rate-limited based on your subscription tier. Rate limit information
    is included in the response headers.
  version: '1.0.0'
  contact:
    name: theData.io Support
    url: https://thedata.io/support
    email: support@thedata.io

servers:
  - url: https://api.thedata.io/v1
    description: Production API
  - url: https://api.staging.thedata.io/v1
    description: Staging API

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    Event:
      type: object
      required:
        - event_type
        - timestamp
        - source
      properties:
        event_type:
          type: string
          description: Type of the event
        timestamp:
          type: string
          format: date-time
          description: Event timestamp
        source:
          type: string
          description: Source of the event
        user_id:
          type: string
          description: Associated user ID
        properties:
          type: object
          description: Custom event properties
        metadata:
          type: object
          description: Additional metadata

    Metric:
      type: object
      required:
        - name
        - value
        - timestamp
      properties:
        name:
          type: string
          description: Metric name
        value:
          type: number
          description: Metric value
        timestamp:
          type: string
          format: date-time
          description: Metric timestamp
        labels:
          type: object
          description: Metric labels
        source:
          type: string
          description: Metric source

    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Additional error details

paths:
  /ingest/events:
    post:
      summary: Ingest a single event
      description: Send a single event for processing
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '202':
          description: Event accepted for processing
        '400':
          description: Invalid event data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded

  /ingest/events/batch:
    post:
      summary: Ingest multiple events
      description: Send multiple events for batch processing
      security:
        - ApiKeyAuth: []
      parameters:
        - name: batch_size
          in: query
          schema:
            type: integer
            default: 100
          description: Size of each processing batch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Event'
      responses:
        '202':
          description: Events accepted for processing
        '400':
          description: Invalid event data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded

  /ingest/metrics:
    post:
      summary: Ingest metrics
      description: Send metrics for processing
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Metric'
      responses:
        '202':
          description: Metrics accepted for processing
        '400':
          description: Invalid metric data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded

  /analytics/events:
    get:
      summary: Get event analytics
      description: Retrieve event analytics data
      security:
        - ApiKeyAuth: []
      parameters:
        - name: start_time
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: Start time for analytics
        - name: end_time
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: End time for analytics
        - name: event_type
          in: query
          schema:
            type: string
          description: Filter by event type
        - name: source
          in: query
          schema:
            type: string
          description: Filter by source
        - name: aggregation
          in: query
          schema:
            type: string
            enum: [count, unique_users, properties]
          description: Type of aggregation
      responses:
        '200':
          description: Analytics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                  aggregations:
                    type: object

  /analytics/metrics:
    get:
      summary: Get metric analytics
      description: Retrieve metric analytics data
      security:
        - ApiKeyAuth: []
      parameters:
        - name: start_time
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: Start time for analytics
        - name: end_time
          in: query
          required: true
          schema:
            type: string
            format: date-time
          description: End time for analytics
        - name: metric_name
          in: query
          schema:
            type: string
          description: Filter by metric name
        - name: labels
          in: query
          schema:
            type: object
          description: Filter by metric labels
        - name: aggregation
          in: query
          schema:
            type: string
            enum: [avg, min, max, sum, count]
          description: Type of aggregation
      responses:
        '200':
          description: Analytics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                  aggregations:
                    type: object

  /analytics/realtime:
    get:
      summary: Get real-time analytics
      description: Retrieve real-time analytics data
      security:
        - ApiKeyAuth: []
      parameters:
        - name: window
          in: query
          schema:
            type: string
            enum: [1m, 5m, 15m, 1h]
            default: 5m
          description: Time window for real-time data
        - name: metrics
          in: query
          schema:
            type: array
            items:
              type: string
          description: List of metrics to include
      responses:
        '200':
          description: Real-time analytics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: string
                    format: date-time
                  data:
                    type: object

  /health:
    get:
      summary: Health check
      description: Check API health status
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy, degraded, unhealthy]
                  components:
                    type: object
                    properties:
                      databases:
                        type: object
                      services:
                        type: object 